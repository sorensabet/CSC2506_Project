import os import numpy as npimport pandas as pd import scipy.stats as st import matplotlib.pyplot as pltos.chdir('/Users/sorensabet/Desktop/MSC/CSC2506_Project')data = pd.read_excel('survey_responses.xlsx', )# Preprocessing file data.drop(columns={'Please enter your name'}, inplace=True)data.rename(columns={    'Unnamed: 0': 'datetime',    'What category below best describes your musical knowledge?': 'music_knowledge',    'What category below best describes your AI knowledge?': 'AI_knowledge',    'Please rate the song on a scale of 1-5 (5 is best) [Rating]': 'track_1_rating',    'Do you think this song was generated by a human or AI?': 'track_1_pred',    'Please rate the song on a scale of 1-5 (5 is best) [Rating].1': 'track_2_rating',    'Do you think this song was generated by a human or AI?.1': 'track_2_pred',    'Please rate the song on a scale of 1-5 (5 is best) [Rating].2': 'track_3_rating',    'Do you think this song was generated by a human or AI?.2': 'track_3_pred',    'Please rate the song on a scale of 1-5 (5 is best) [Rating].3': 'track_4_rating',    'Do you think this song was generated by a human or AI?.3': 'track_4_pred',    'Please rate the song on a scale of 1-5 (5 is best) [Rating].4': 'track_5_rating',    'Do you think this song was generated by a human or AI?.4': 'track_5_pred',    'Please rate the track on the scale below [Rating]': 'maj2min_o',    'Please rate the track on the scale below [Rating].1': 'maj2min_t',     'Please rate the track on the scale below [Rating].2': 'min2maj_o',     'Please rate the track on the scale below [Rating].3': 'min2maj_t',     }, inplace=True)# Replace AI/Human text with numbers  (AI = 0, Human=1)hai = {'AI': 0, 'Human': 1}bsr = {'1 - Sad/Dark': 1, '3 - Neutral': 3, '5 - Bright/Happy': 5, '5 - Happy/Bright': 5}data.replace({'track_1_pred': hai,              'track_2_pred': hai,               'track_3_pred': hai,              'track_4_pred': hai,               'track_5_pred': hai,              'maj2min_o': bsr,               'maj2min_t': bsr,               'min2maj_o': bsr,               'min2maj_t': bsr}, inplace=True)# Define subgroup for expriment here by changing subset condition mode = 'all' # all, m_beg, m_int, m_adv, ai_beg, ai_int, ai_advprint('\n\n')if (mode == 'm_beg'):    data = data.loc[data['music_knowledge'] == 'Beginner']    print('Subset: Beginner Musicians (n=%d)\n' % len(data))elif (mode == 'm_int'):    data = data.loc[data['music_knowledge'] == 'Intermediate']    print('Subset: Intermediate Musicians (n=%d)\n' % len(data))elif (mode == 'm_adv'):    data = data.loc[data['music_knowledge'] == 'Advanced']    print('Subset: Advanced Musicians (n=%d)\n' % len(data))elif (mode == 'ai_beg'):    data = data.loc[data['AI_knowledge'] == 'Beginner']    print('Subset: Beginner AIs (n=%d)\n' % len(data))elif (mode == 'ai_int'):    data = data.loc[data['AI_knowledge'] == 'Intermediate']    print('Subset: Intermediate AIs (n=%d)\n' % len(data))elif (mode == 'ai_adv'):    data = data.loc[data['AI_knowledge'] == 'Advanced']    print('Subset: Advanced AIs (n=%d)\n' % len(data))else:    print('Subset: All Respondents\n')    # Report: Ratings by track print('Track 1 (AI) Rating: %0.2f' % (data['track_1_rating'].mean()))print('Track 2 (HM) Rating: %0.2f' % (data['track_2_rating'].mean()))print('Track 3 (AI) Rating: %0.2f' % (data['track_3_rating'].mean()))print('Track 4 (HM) Rating: %0.2f' % (data['track_4_rating'].mean()))print('Track 5 (AI) Rating: %0.2f' % (data['track_5_rating'].mean()))# Experiment 1: Track classification accuracyprint('\nTrack 1 Classification Accuracy: %0.1f%%' % (100 - 100*data['track_1_pred'].sum()/len(data)))print('Track 2 Classification Accuracy: %0.1f%%' % (100*data['track_2_pred'].sum()/len(data)))print('Track 3 Classification Accuracy: %0.1f%%' % (100 - 100*data['track_3_pred'].sum()/len(data)))print('Track 4 Classification Accuracy: %0.1f%%' % (100*data['track_4_pred'].sum()/len(data)))print('Track 5 Classification Accuracy: %0.1f%%' % (100 - 100*data['track_5_pred'].sum()/len(data)))# # Experiment 3: Maj2Min average rating before/after maj2min_1 = data['maj2min_o'].mean()maj2min_2 = data['maj2min_t'].mean() print('\nExperiment 3 Results: ')print('Maj2Min Original File Avg Rating: %0.2f' % maj2min_1)print('Maj2Min Transfer File Avg Rating: %0.2f' % maj2min_2)# Experiment 4: Min2Maj average rating before/aftermin2maj_1 = data['min2maj_o'].mean()min2maj_2 = data['min2maj_t'].mean() print('\nExperiment 4 Results: ')print('Min2Maj Original File Avg Rating: %0.2f' % min2maj_1)print('Min2Maj Transfer File Avg Rating: %0.2f' % min2maj_2)